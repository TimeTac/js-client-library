import { AbsenceDay } from '../absenceDays/types';
import { Absence } from '../absences/types';
import { AbsenceType } from '../absenceTypes/types';
import { Department } from '../departments/types';
import { FavouriteTask } from '../favouriteTasks/types';
import { GeneralSetting } from '../generalSettings/types';
import { Project } from '../projects/types';
import { RecentTask } from '../recentTasks/types';
import { Task } from '../tasks/types';
import { Team } from '../teams/types';
import { TimesheetAccounting } from '../timesheetAccountings/types';
import { TimeTracking } from '../timetrackings/types';
import { TodoTask } from '../todoTasks/types';
import { User } from '../users/types';
import { UserStatusOverview } from '../userStatusOverview/types';
import { ResourceResponse } from '../utils/response/resourceResponse';

export type DeltaSyncResults = {
  // absenceBans?: Response<AbsenceBan>;
  // absenceReplacements?: Response<AbsenceReplacement>;
  // changeTimeTrackingRequests?: Response<ChangeTimeTrackingRequestser>;
  // checkpoints?: Response<Checkpoint>;
  // checkpointTrackings?: Response<CheckpointTracking>;
  // checkpointTranslations?: Response<CheckpointTranslation>;
  // clients?: Response<Client>;
  // holidayRequests?: Response<HolidayRequest>;
  // messages?: Response<Message>;
  // multiuserToTasks?: Response<MultiuserToTask>;
  // nfcTransponder?: Response<NfcTransponder>;
  // nodesToUsers?: Response<NodesToUser>;
  // notifications?: Response<Notification>;
  // notificationsTypeHtml?: Response<NotificationsTypeHtml>;
  // notificationUrls?: Response<NotificationUrl>;
  // permissionResolveAbsenceTypesAndUsers?: Response<PermissionResolveAbsenceTypesAndUser>;
  // permissionResolveDepartments?: Response<PermissionResolveDepartment>;
  // permissionResolveHolidayRequests?: Response<PermissionResolveHolidayRequest>;
  // permissionResolveQuestions?: Response<PermissionResolveQuestion>;
  // permissionResolveTeams?: Response<PermissionResolveTeam>;
  // permissionResolveUsers?: Response<PermissionResolveUser>;
  // permissions?: Response<Permission>;
  // serverEvents?: Response<ServerEvent>;
  // serverTime?: Response<ServerTime>;
  // skills?: Response<Skill>;
  // surveys?: Response<Survey>;
  // timePlannings?: Response<TimePlanning>;
  // timesheetAccountingSummaries?: Response<TimesheetAccountingSummarie>;
  // timesheetActionLogs?: Response<TimesheetActionLog>;
  // timetrackingChangelogs?: Response<TimetrackingChangelog>;
  // translations?: Response<Translation>;
  absenceDays?: ResourceResponse<AbsenceDay>;
  absences?: ResourceResponse<Absence>;
  absenceTypes?: ResourceResponse<AbsenceType>;
  departments?: ResourceResponse<Department>;
  favouriteTasks?: ResourceResponse<FavouriteTask>;
  generalSettings?: ResourceResponse<GeneralSetting>;
  projects?: ResourceResponse<Project>;
  recentTasks?: ResourceResponse<RecentTask>;
  tasks?: ResourceResponse<Task>;
  teams?: ResourceResponse<Team>;
  timesheetAccountings?: ResourceResponse<TimesheetAccounting>;
  timeTrackings?: ResourceResponse<TimeTracking>;
  todoTasks?: ResourceResponse<TodoTask>;
  users?: ResourceResponse<User>;
  userStatusOverview?: ResourceResponse<UserStatusOverview>;
};
